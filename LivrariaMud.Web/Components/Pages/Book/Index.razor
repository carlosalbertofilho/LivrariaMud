@page "/books"
@inject IBookService service

<PageTitle>Books</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Catalog of Books</MudText>

<MudPaper Class="d-flex justify-end" Elevation="0">
    <MudFab Color="Color.Secondary" Href="/books/create"
        StartIcon="@Icons.Material.Filled.Edit" Label="Add Book" />
</MudPaper>

<MudPaper Class="d-flex justify-center flex-grow-1 gap-4 pa-md-6 mx-lg-auto" Elevation="0">
    @switch ( Status )
    {
        case true:
            <ListBooks DataList="DataList" />
            break;
        case false:
            <ShowErrors Errors="Errors" />
            break;
        default:
            <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
            break;
    }
</MudPaper>
@code
{
    private BookHandler? result;
    private bool? Status = null;
    private IEnumerable<ViewBook> DataList = [];
    private List<string> Errors = [];

    protected override async Task OnInitializedAsync ()
    {
        result = new BookHandler( service );
        (Status, DataList, Errors) = await result.GetAllBooks();

        if ( DataList.Count() == 0 )
        {
            Errors.Add( "No books found." );
            Status = false;
        }
    }
}